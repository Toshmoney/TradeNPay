<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AlphaBills | Buy Data</title>
    <link rel="stylesheet" href="/css/toastr.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/general.css">
    <link rel="stylesheet" href="/css/aside.css">
    <link rel="stylesheet" href="/css/DataPlans.css">
</head>
<body>
    <section class="dashboard-container">
        <%- include('../partials/aside') %>

        <main>
            <%- include('../partials/mobileHeader') %>
            <div class="dashboard-main-top">
                <h1>BUY DATA</h1>
                <div class="input-bar">
                    <div>
                        <img src="images/tabler-icon-bell.png" alt="">
                    </div>
                    <div class="profile-picture">
                        <img src="images/Frame 12.png" alt="profile-picture">
                    </div>
                </div>
            </div>
            <div class="bill-payer">
                <form action="">
                    <div class="form-group">
                        <div class="choose form-field">
                            <label class="bold" for="network">SELECT NETWORK PROVIDER</label>
                            <select class="network" name="network" id="network" value="Select Option">
                                <!-- <option value="">Select Option</option> -->
                                <option value="BCA SME">MTN NG</option>
                                <option value="BCC GIFTING">GLO</option>
                                <option value="BCB GIFTING">9MOBILE</option>
                                <option value="BCD GIFTING">AIRTEL NG</option>
                            </select>
                        </div>
                        <div class="choose form-field">
                            <label class="bold" for="prices">CHOOSE PLAN</label>
                            <select class="prices" name="prices" id="prices" value="Select Option">
                                <option value="">Select Option</option>
                                <% details.forEach(function(detail, i, arr){ -%>
                                    <option value="<%= detail.code %> <%= detail.cost %>"><%= detail.cost %> for <%= detail.value %>MB</option>
                                <% }); -%>
                            </select>
                        </div>
                    </div>
                    <div class="form-field">
                        <label class="bold" for="phoneNumber">PHONE NO.</label>
                        <input type="tel" name="phoneNumber" id="phoneNumber" placeholder="0901 2345 678">
                    </div>
                    <div class="page-end">
                        <p class="flex gap-6 bold wallet-balance">
                            Total Bal.<span><%= balance %></span>
                        </p>
                        <div class="ctas">
                            <button type="button" class="cta share">share</button></a>
                            <button type="submit" class="cta submit submit-btn">Continue</button>
                        </div>
                    </div>
                </form>
            </div>

        </main>
    </section>
    
    <script src="/js/dashboard.js"></script>
    <script src="/js/jquery.js"></script>
    <script src="/js/toastr.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const phoneNumberRegex = /^\d{11}$/;
        const toastOptions = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "4000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr.options = { ...toastOptions }
        let walletBalance = 0;
        const balanceElement = document.querySelector('.wallet-balance > span')
        walletBalance = Number(balanceElement.textContent)
        balanceElement.textContent = `N${walletBalance}`

        const form = document.querySelector('form')
        const networkSelect = document.querySelector('select.network')
        const pricesSelect = document.querySelector('select.prices')
        const submitButton = document.querySelector('button.submit-btn')
        const phoneNumberInput = document.querySelector('input#phoneNumber')

        const disableBuyButton = (buttonText='Please wait') => {
            submitButton.disabled = true
            submitButton.textContent = buttonText
            submitButton.classList.add('disabled')
        }

        const activateBuyButton = (buttonText='Buy Now') => {
            submitButton.disabled = false
            submitButton.textContent = buttonText
            submitButton.classList.remove('disabled')
        }

        const resetInputs = () => {
            networkSelect.value = ""
            pricesSelect.value = ""
            phoneNumber.value = ""
            activateBuyButton()
        }

        const validatedData = () => {
            const item = pricesSelect.value
            let [code, amount] = pricesSelect.value.split(" ")
            amount = Number(amount)
            const [service_id, service_type] = networkSelect.value.split(" ")
            const phoneNumber = phoneNumberInput.value.replaceAll(" ", "")

            // validate data
            if (!service_id || !service_type) {
                toastr.error('Pls select network provider')
                return false
            }
            if (!amount || !code ) {
                toastr.error('Pls choose plan')
                return false
            }
            if (!phoneNumberRegex.test(phoneNumber)) {
                toastr.error('Pls enter 11 digits phone number to recharge', 'Invalid Number')
                return false
            }
            if (walletBalance < amount) {
                toastr.error('Kindly fund your wallet', 'Insufficient Wallet Balance')
                return false
            }
            return {
                amount, code,
                beneficiary: phoneNumber,
                service_id, service_type
            }

        }

        const recharge = () => {
            if (!validatedData()) {
                return
            }
<<<<<<< HEAD
            
            continueButton.textContent = 'Please wait'

            // send to server for purchase
            axios.post("/api/v1/data_plan/recharge", {
                amount: Number(amount),
=======
            const {
                amount, code,
                beneficiary,
                service_id, service_type
            } = validatedData()
            disableBuyButton()
             // send to server for purchase
             axios.post("/api/v1/data_plan/recharge", {
                amount,
>>>>>>> 2d1501445fe37529d74c4a4257dbcb6ab693a3ea
                code,
                beneficiary,
                service_id,
                service_type,
            })
            .then(res => {
                const { data } = res
                walletBalance = data.balance || walletBalance - amount
                balanceElement.textContent = `N${walletBalance}`
                resetInputs()
                toastr.success('Your transaction is being processed')
            })
            .catch(error => {
                if (error.response) {
                    const { data, status } = error.response
                    const { message } = data
                    if (status === 401 || status === 405) {
                        toastr.info('Pls logout and login again', 'Session Over')
                    }
                    else {
                        toastr.error(`${message || 'Pls contact the admin'}`)
                    }
                    console.log(error.response.data);
                }
                else if (error.request) {
                    toastr.error('Pls check your internet connectivity and try again', 'Poor Internet')
                }
                else {
                    toastr.error('Pls contact the admin')
                }
                activateBuyButton()
            })
        }

        form.addEventListener('submit', (event) => {
            event.preventDefault()
            recharge()
        })

        const fetchPrices = (service_id, requestType) => {
            const data = {
                service_id, requestType
            }
            disableBuyButton()
            pricesSelect.innerHTML = `<option value="">Fetching packages</option>`
            axios.post("/api/v1/data_plan/prices", data)
            .then((response) => {
                activateBuyButton()
                const prices = response.data
                pricesSelect.innerHTML = `<option value="">Select Option</option>`
                for (let index = 0; index < prices.length; index++) {
                    const price = prices[index];
                    pricesSelect.innerHTML += `<option value='${price.code} ${price.cost}'>${price.cost} for ${price.value}mb</option>`
                }
            })
            .catch(error => {
                activateBuyButton()
                pricesSelect.innerHTML = `<option value="">Select your network provider and then desired plan</option>`
                console.log(error);
            })
        }

        networkSelect.addEventListener('change', (event) => {
            const item = event.target.value
            const [service_id, requestType] = item.split(" ")
            fetchPrices(service_id, requestType)
        })

        pricesSelect.addEventListener('change', (event) => {
            const [code, amount] = event.target.value.split(" ");
        })

    </script>
</body>
</html>